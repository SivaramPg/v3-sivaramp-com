---
import Project from '../Project.astro'
import SectionTitle from '../SectionTitle.astro'
---

<section class="flex flex-col gap-4">
  <SectionTitle title="Projects" />
  <div class="flex flex-col gap-8">
    <Project
      imageUrl="https://desilog.sivaramp.com/i/avatars/33/200"
      title="Anaek Desilog"
      description={`Free CC0 Desi/Indian placeholder APIs for dynamically sized Avatars, Colourful as well as Black & White Characters!\n Purely built with Next 13 for UI & backend routes, hosted on Vercel + Cloudflare pages for larger static assets. My solution for the question what if placeholder images had a desi flare & were highly available for anyone to use day to day :)`}
      stack={['Nextjs 13', 'Vercel + Cloudflare']}
      websiteUrl="https://desilog.sivaramp.com/"
      repoUrl="https://github.com/SivaramPg/desilog"
    />
    <Project
      imageUrl="https://swapi.info/favicon.ico"
      title="Swapi.info"
      description={`JSON-only, CDN-powered, Wicked-fast, Unrestricted Star Wars data Explorer & GET API endpoints. \n Built with Nextjs 13's exported output & JSON files hosted on Cloudflare Pages to solve my question, why do placeholders API need to be slow & I don't really need anything more than just a GET API to mock/prototype my stuff :)`}
      stack={['Nextjs 13', 'Cloudflare']}
      websiteUrl="https://swapi.info/"
      repoUrl="https://github.com/SivaramPg/swapi.info"
    />
    <Project
      imageUrl="https://bg.sivaramp.com/og.png"
      title="Random Linear Gradients"
      description={`Simple utility website to generate randomized linear gradient backgrounds with full page visual preview\n Well, everyone needs a linear gradient at sometime!. I needed one and made this :)`}
      stack={['HTML', 'CSS', 'JS', 'Cloudflare']}
      websiteUrl="https://bg.sivaramp.com/"
      repoUrl="https://github.com/SivaramPg/Gradient-Background-Generator"
    />
    <Project
      imageUrl="https://data-url.sivaramp.com/favicon.ico"
      title="Data URL"
      description={`View, validate, verify data URLs in a browser.\n Need is the mother of all invention, am I right ðŸ˜€. Needed this, so I made it!`}
      stack={['Nextjs 13', 'Cloudflare']}
      websiteUrl="https://data-url.sivaramp.com/"
      repoUrl="https://github.com/SivaramPg/data-url"
    />
    <Project
      imageUrl="https://link-masker.sivaramp.com/icons/mask.svg"
      title="Link Masker"
      description={`Shorten and Mask any URL in an instant. Built using the Vercel stack!. Next 13's React Server Components, Server Actions & form status hooks + Vercel's KV store for persisted high-performance storage.`}
      stack={[
        'Nextjs 13',
        'React Server Components',
        'Server Actions',
        'Vercel KV',
        'Vercel',
      ]}
      websiteUrl="https://link-masker.sivaramp.com/"
      repoUrl="https://github.com/SivaramPg/link-masker"
    />
    <Project
      imageUrl="https://anonimizer.sivaramp.com/anonymous-face-mask.svg"
      title="URL Anonimizer"
      description={`Shorten and anonimize any URL quickly.`}
      stack={['Nextjs 11', 'Vercel', 'Firestore']}
      websiteUrl="https://anonimizer.sivaramp.com/"
      repoUrl="https://github.com/SivaramPg/url-masker"
    />
    <Project
      imageUrl="https://snake.sivaramp.com/assets/favicons/favicon.ico"
      title="JS Canvas Snake Game"
      description={`A fun web canvas based snake game created in collaboration with a fellow student during my course.`}
      stack={['HTML', 'CSS', 'JS', 'Cloudflare']}
      websiteUrl="https://snake.sivaramp.com/"
      repoUrl="https://github.com/SivaramPg/JS_Snake_Game"
    />
  </div>
</section>
